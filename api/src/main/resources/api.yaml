# API Template to extend when a service is created based on this archetype.
# Do not create a new .yml file next to this, rather use this as the main descriptor.

openapi: "3.0.3"
info:
  version: 1.0.0
  title: Microservice

servers:
  - url: http://localhost:8081

paths:

# ==============================================================================
# User
# ==============================================================================

  /api/v1/users:
    post:
      tags:
        - user
      operationId: createUser
      description: Create a User
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
        required: true
      responses:
        201:
          description: The created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
    get:
      tags:
        - user
      operationId: getAllUser
      description: get all existing User
      responses:
        200:
          description: List of Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    put:
      tags:
        - user
      operationId: updateUser
      description: Update a User
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        200:
          description: The updated User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
        - user
      operationId: deleteUser
      description: Delete a User
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        200:
          description: The deleted User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /api/v1/users/install/{appId}:
    post:
      tags:
        - user
      operationId: install
      description: Install an Application to a User
      parameters:
        - name: appId
          in: path
          required: true
          description: Id of the Application
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/UserDto'
        required: true
      responses:
        200:
          description: The User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'

  /api/v1/users/create-child/{userId}:
    post:
      tags:
        - user
      operationId: createChild
      description: Create a child User
      parameters:
        - name: userId
          in: path
          required: true
          description: Id of the Application
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
        required: true
      responses:
        201:
          description: The created User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'


# ==============================================================================
# Application
# ==============================================================================

  /api/v1/applications:
    post:
      tags:
        - application
      operationId: createApplication
      description: Create an Application
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/ApplicationDto'
        required: true
      responses:
        201:
          description: The created Application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDto'
    get:
      tags:
        - application
      operationId: getAllApplication
      description: get all existing Application
      responses:
        200:
          description: List of Applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationDto'

components:
  schemas:
    UserDto:
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        currentWallpaperIndex:
          type: integer
          format: int32
        wallpapers:
          type: array
          items:
            type: string
        applications:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationDto'
        role:
          enum:
            - PARENT
            - CHILD

    ApplicationDto:
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    CreateUserDto:
      required:
        - username
      properties:
        username:
          type: string


